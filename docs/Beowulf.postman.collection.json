{
	"info": {
		"_postman_id": "fc68c845-6f34-49cd-9c18-376cd9296eb0",
		"name": "Beowulf",
		"description": "This is the Beowulf collection of endpoint server calls. ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Auth Default",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "22323",
									"description": "The ID of the application",
									"type": "text"
								},
								{
									"key": "token",
									"value": "2234FFR1RRDF",
									"description": "The App Token",
									"type": "text"
								},
								{
									"key": "geo",
									"value": "US",
									"description": "The location",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/auth",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth"
							]
						},
						"description": "The Default Call to Auth"
					},
					"response": []
				},
				{
					"name": "Authorize User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "jsmith@company.com",
									"description": "email of the user",
									"type": "text"
								},
								{
									"key": "password",
									"value": "jigglyPuff1",
									"description": "Password of the user",
									"type": "text"
								},
								{
									"key": "token",
									"value": "2234FFR1RRDF",
									"description": "Application Token",
									"type": "text"
								},
								{
									"key": "geo",
									"value": "US",
									"description": "The location of the person",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/auth/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"user"
							]
						},
						"description": "This authorizes the user on the system"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Users (LIST)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/users/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								""
							]
						},
						"description": "This is the user list for the user service. "
					},
					"response": []
				},
				{
					"name": "User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/users/12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"12"
							]
						},
						"description": "This returns the user "
					},
					"response": []
				},
				{
					"name": "Add User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "firstname",
									"value": "Ray",
									"description": "First name of the user",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "Bayly",
									"description": "Last Name of the user",
									"type": "text"
								},
								{
									"key": "date",
									"value": "01.01.2020",
									"description": "Date user created",
									"type": "text"
								},
								{
									"key": "email",
									"value": "rbayly@company.com",
									"description": "Email of the user",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "800.222.1234",
									"description": "Users Phone Number",
									"type": "text"
								},
								{
									"key": "mobile",
									"value": "704.111.1234",
									"description": "Mobile Phone of the User",
									"type": "text"
								},
								{
									"key": "profile",
									"value": "https://github.com/raymondwbayly/beowulf-assets/blob/master/img/pub/user-profile.jpeg?raw=true",
									"description": "Users Picture",
									"type": "text"
								},
								{
									"key": "token",
									"value": "juyhguy76uh",
									"description": "Auth Token",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/users/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								""
							]
						},
						"description": "This is the add user call to the server. "
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "firstname",
									"value": "Ray",
									"description": "First name of the user",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "Bayly",
									"description": "Last Name of the user",
									"type": "text"
								},
								{
									"key": "date",
									"value": "01.01.2020",
									"description": "Date user created",
									"type": "text"
								},
								{
									"key": "email",
									"value": "rbayly@company.com",
									"description": "Email of the user",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "800.222.1234",
									"description": "Users Phone Number",
									"type": "text"
								},
								{
									"key": "mobile",
									"value": "704.111.1234",
									"description": "Mobile Phone of the User",
									"type": "text"
								},
								{
									"key": "profile",
									"value": "https://github.com/raymondwbayly/beowulf-assets/blob/master/img/pub/user-profile.jpeg?raw=true",
									"description": "Users Picture",
									"type": "text"
								},
								{
									"key": "token",
									"value": "juyhguy76uh",
									"description": "Auth Token",
									"type": "text"
								},
								{
									"key": "id",
									"value": "1",
									"description": "The id of the user",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						},
						"description": "This is the update user call"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/users/332",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"332"
							]
						},
						"description": "This allows you to remove the user from the system"
					},
					"response": []
				},
				{
					"name": "Deactivate User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/users/deactivate/332",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"deactivate",
								"332"
							]
						},
						"description": "This allows you to deactivate the user on the system"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Alerts",
			"item": [
				{
					"name": "List Alerts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/alerts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"alerts"
							]
						},
						"description": "This is the Alerts ROute, this returns Alert Information by passing the user ID to the route. "
					},
					"response": []
				},
				{
					"name": "Read Alert",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/alerts/12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"alerts",
								"12"
							]
						},
						"description": "This gets a single alert"
					},
					"response": []
				},
				{
					"name": "Create Alert",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "New Alert",
									"description": "This is the title of the alert",
									"type": "text"
								},
								{
									"key": "date",
									"value": "01/1/2020",
									"description": "date of the alert",
									"type": "text"
								},
								{
									"key": "description",
									"value": "This is a new alert ",
									"description": "This is the description",
									"type": "text"
								},
								{
									"key": "author",
									"value": "Raymond Bayly",
									"description": "This is the author of the alert",
									"type": "text"
								},
								{
									"key": "email",
									"value": "jsmith@company.com",
									"description": "This is who the alert is for. ",
									"type": "text"
								},
								{
									"key": "token",
									"value": "erg4twhy4y54h4",
									"description": "This is the auth token to allow for permissions. ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/alerts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"alerts"
							]
						},
						"description": "This creates the alert, this allows us to update the record index with a new one, this is a simulation. "
					},
					"response": []
				},
				{
					"name": "Alert Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "1",
									"description": "ID of the Alert",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Test title",
									"description": "Title of the alert",
									"type": "text"
								},
								{
									"key": "date",
									"value": "01/01/2020",
									"description": "Date of the alert",
									"type": "text"
								},
								{
									"key": "description",
									"value": "This is a test alert to simulate upfating one ",
									"description": "Description of the Alert",
									"type": "text"
								},
								{
									"key": "author",
									"value": "Raymond Bayly",
									"description": "The author of the alert",
									"type": "text"
								},
								{
									"key": "email",
									"value": "jsmith@company.com",
									"description": "Email of the reciepent of the alert",
									"type": "text"
								},
								{
									"key": "token",
									"value": "sdgergt453",
									"description": "Authorization token",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/alerts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"alerts"
							]
						},
						"description": "This is the alert update"
					},
					"response": []
				},
				{
					"name": "Delete Alert",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/alerts/12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"alerts",
								"12"
							]
						},
						"description": "This simulates teh deletion of an alert. "
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Calendar",
			"item": [
				{
					"name": "Event",
					"item": [
						{
							"name": "Get Event",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/calendar/event/132",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"calendar",
										"event",
										"132"
									]
								},
								"description": "This gets a specific event"
							},
							"response": []
						},
						{
							"name": "Add Event",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "token",
											"value": "sdfgdgedr9898",
											"description": "The Authorization Token",
											"type": "text"
										},
										{
											"key": "id",
											"value": "12",
											"description": "ID of the Event",
											"type": "text"
										},
										{
											"key": "user",
											"value": "1",
											"description": "teh ID of the user who created the event",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Raymond Bayly",
											"description": "The name of the person who has the event",
											"type": "text"
										},
										{
											"key": "email",
											"value": "jsmith@company.com",
											"description": "This is the email of the person ",
											"type": "text"
										},
										{
											"key": "location",
											"value": "Charlotte, NC",
											"description": "Location of the Event",
											"type": "text"
										},
										{
											"key": "duration",
											"value": "30 Minutes",
											"description": "Duration of event",
											"type": "text"
										},
										{
											"key": "starttime",
											"value": "8:30 AM",
											"description": "Time event starts",
											"type": "text"
										},
										{
											"key": "startdate",
											"value": "4.12.2020",
											"description": "Date of the event start",
											"type": "text"
										},
										{
											"key": "endtime",
											"value": "9:00 AM",
											"description": "Time event ends",
											"type": "text"
										},
										{
											"key": "enddate",
											"value": "4.12.2020",
											"description": "Date Event Ends",
											"type": "text"
										},
										{
											"key": "subject",
											"value": "This is a test event for the system",
											"description": "Title of tibject of the event",
											"type": "text"
										},
										{
											"key": "description",
											"value": "This is the event description for teh system",
											"description": "This is the description of the event",
											"type": "text"
										},
										{
											"key": "aid1",
											"value": "3",
											"description": "ID of an attendee",
											"type": "text"
										},
										{
											"key": "afn1",
											"value": "John",
											"description": "The name of the atendee",
											"type": "text"
										},
										{
											"key": "aln1",
											"value": "Smith",
											"description": "The last name of the attendee",
											"type": "text"
										},
										{
											"key": "aem1",
											"value": "jsmith@company.com",
											"description": "This is the email of the attendee",
											"type": "text"
										},
										{
											"key": "aid2",
											"value": "4",
											"description": "This is an id for the attendee",
											"type": "text"
										},
										{
											"key": "afn2",
											"value": "Skip",
											"description": "This is the first name of the attendee",
											"type": "text"
										},
										{
											"key": "aln2",
											"value": "Jenkins",
											"description": "This is the last name of an attendee",
											"type": "text"
										},
										{
											"key": "aem2",
											"value": "klisp@company.com",
											"description": "Email of teh Attendee",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:3000/calendar/event",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"calendar",
										"event"
									]
								},
								"description": "Adds Event to the system (Simulated)"
							},
							"response": []
						},
						{
							"name": "Update Event",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "token",
											"value": "weferge989",
											"description": "Auth Token",
											"type": "text"
										},
										{
											"key": "id",
											"value": "1",
											"description": "The id of the Auth you are updating",
											"type": "text"
										},
										{
											"key": "user",
											"value": "3",
											"description": "The user ID for the owner of event",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Raymond Bayly",
											"description": "Name of the person its assigned to",
											"type": "text"
										},
										{
											"key": "email",
											"value": "jsmith@company.com",
											"description": "The email of teh person",
											"type": "text"
										},
										{
											"key": "location",
											"value": "Charlotte, NC",
											"description": "Location of the Event",
											"type": "text"
										},
										{
											"key": "duration",
											"value": "30 Minutes",
											"description": "Duration of the event",
											"type": "text"
										},
										{
											"key": "startdate",
											"value": "02.15.2020",
											"description": "Start of the event",
											"type": "text"
										},
										{
											"key": "starttime",
											"value": "9:00 AM",
											"description": "This is the start time",
											"type": "text"
										},
										{
											"key": "enddate",
											"value": "2.15.2020",
											"description": "This is the end date",
											"type": "text"
										},
										{
											"key": "endtime",
											"value": "9:30 AM",
											"description": "This is the end time",
											"type": "text"
										},
										{
											"key": "subject",
											"value": "This is the event to update",
											"description": "This is the subject or title of the event",
											"type": "text"
										},
										{
											"key": "description",
											"value": "This is the event updated, this is the body of the event",
											"description": "This is the body of the vent ",
											"type": "text"
										},
										{
											"key": "aid1",
											"value": "1",
											"description": "User id of Attendee",
											"type": "text"
										},
										{
											"key": "adfn1",
											"value": "Chris",
											"description": "First name of the attendee",
											"type": "text"
										},
										{
											"key": "adln1",
											"value": "Johnson",
											"description": "Last name of the person",
											"type": "text"
										},
										{
											"key": "aem1",
											"value": "cjohnson@company.com",
											"description": "This is the atendees email",
											"type": "text"
										},
										{
											"key": "aid2",
											"value": "4",
											"description": "ID of attendee",
											"type": "text"
										},
										{
											"key": "afn2",
											"value": "Barry",
											"description": "First name of attendee",
											"type": "text"
										},
										{
											"key": "aln2",
											"value": "Gordy",
											"description": "Last name of attendee",
											"type": "text"
										},
										{
											"key": "aem2",
											"value": "bgordy@company.com",
											"description": "Company email for attendee",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:3000/calendar/event",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"calendar",
										"event"
									]
								},
								"description": "This creates the call to update the event. "
							},
							"response": []
						},
						{
							"name": "Delete Event",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/calendar/event/12",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"calendar",
										"event",
										"12"
									]
								},
								"description": "This deletes the event (Simulation)"
							},
							"response": []
						},
						{
							"name": "Complete Event",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/calendar/event/complete/32",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"calendar",
										"event",
										"complete",
										"32"
									]
								},
								"description": "This completes the event. "
							},
							"response": []
						}
					],
					"description": "These are the event calls for the calendar. ",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Day",
					"item": [
						{
							"name": "Calendar Get Current Day",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/calendar/day",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"calendar",
										"day"
									]
								},
								"description": "This returns the current day , you don't have to pass anything to it"
							},
							"response": []
						},
						{
							"name": "Calendar Get Specific Day",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/calendar/day/1.1.2020",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"calendar",
										"day",
										"1.1.2020"
									]
								},
								"description": "This returns a specific day "
							},
							"response": []
						}
					],
					"description": "These are the day calls for the calendar",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Week",
					"item": [
						{
							"name": "Calendar Get Current Week",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/calendar/week",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"calendar",
										"week"
									]
								},
								"description": "This gets the current week , "
							},
							"response": []
						},
						{
							"name": "Calendar Get Specific week ",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/calendar/week/4.19.2020",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"calendar",
										"week",
										"4.19.2020"
									]
								},
								"description": "Returns a specific week, pass the first date of that week and it returns the next seven days. "
							},
							"response": []
						}
					],
					"description": "These are the week calls for the calendar",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Month",
					"item": [
						{
							"name": "Calendar Get Current Month",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/calendar/month",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"calendar",
										"month"
									]
								},
								"description": "This returns the current month"
							},
							"response": []
						},
						{
							"name": "Calendar Get Specific Month",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/calendar/month/01",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"calendar",
										"month",
										"01"
									]
								},
								"description": "Pass the month ID and you will recieve the entire month. "
							},
							"response": []
						}
					],
					"description": "These are the month calls for the server",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Calendar (Schedule List)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/calendar/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"calendar",
								""
							]
						},
						"description": "This is the calendar service and returns the users schedule by passing the ID to the service"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Config",
			"item": [
				{
					"name": "Config Information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/cfg",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cfg"
							]
						},
						"description": "This returns the configuration including things like date of release, version, version notes and more. "
					},
					"response": []
				},
				{
					"name": "Get Version Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/cfg/version",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cfg",
								"version"
							]
						},
						"description": "This returns the version object only, allowing you to only get the version number, date and link to the notes. "
					},
					"response": []
				},
				{
					"name": "Version Number",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/cfg/version/number",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cfg",
								"version",
								"number"
							]
						},
						"description": "This retrieves the version number from the config. "
					},
					"response": []
				},
				{
					"name": "Get Support Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/cfg/support",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cfg",
								"support"
							]
						},
						"description": "Retrieves support information used by the application. \n"
					},
					"response": []
				},
				{
					"name": "Version Notes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/cfg/version/notes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cfg",
								"version",
								"notes"
							]
						},
						"description": "This returns the version notes from the server. this is the general version notes. "
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "News",
			"item": [
				{
					"name": "News List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/news",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"news"
							]
						},
						"description": "Returns a list of news items for the user, based on the user ID and geographic location. "
					},
					"response": []
				},
				{
					"name": "News Story Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/news/12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"news",
								"12"
							]
						},
						"description": "This returns a single news story from the server. "
					},
					"response": []
				},
				{
					"name": "Add News Story",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "author",
									"value": "Raymond Bayly",
									"description": "Author of the Story",
									"type": "text"
								},
								{
									"key": "authorid",
									"value": "1",
									"description": "The ID of the author",
									"type": "text"
								},
								{
									"key": "date",
									"value": "01/12/2020",
									"description": "DAte of the Story",
									"type": "text"
								},
								{
									"key": "media",
									"value": "https://github.com/raymondwbayly/beowulf-assets/blob/master/img/pub/news-pic-4.png?raw=true\"",
									"description": "The picture for the story",
									"type": "text"
								},
								{
									"key": "title",
									"value": "This is the news story new to the server",
									"description": "Title of the story",
									"type": "text"
								},
								{
									"key": "story",
									"value": "This is the story for the server, this is where the body of teh story goes. ",
									"description": "Story body",
									"type": "text"
								},
								{
									"key": "token",
									"value": "3453ferf34r34",
									"description": "Authorization Token. ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/news",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"news"
							]
						},
						"description": "This adds a news story to the server"
					},
					"response": []
				},
				{
					"name": "Updated News Story",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "3",
									"description": "The ID of the story",
									"type": "text"
								},
								{
									"key": "author",
									"value": "Raymond Bayly",
									"description": "Author",
									"type": "text"
								},
								{
									"key": "authorid",
									"value": "2",
									"description": "The ID of the author",
									"type": "text"
								},
								{
									"key": "date",
									"value": "04/01/2020",
									"description": "Date of the story",
									"type": "text"
								},
								{
									"key": "media",
									"value": "https://github.com/raymondwbayly/beowulf-assets/blob/master/img/pub/news-pic-3.png?raw=true\"",
									"description": "Picture for the news story",
									"type": "text"
								},
								{
									"key": "title",
									"value": "This is the title of the story bieng updated",
									"description": "This is the title",
									"type": "text"
								},
								{
									"key": "story",
									"value": "This is the body of teh story that we are updating , this story will be saved to the server well at least as a simulation",
									"description": "This is the story",
									"type": "text"
								},
								{
									"key": "token",
									"value": "87878deer76",
									"description": "Thks is the auth token for teh session",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/news",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"news"
							]
						},
						"description": "This updates the news story on the server"
					},
					"response": []
				},
				{
					"name": "Delete News",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/news/23",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"news",
								"23"
							]
						},
						"description": "This allows you to delete a news story from the server"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Task List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						},
						"description": "This is the task service, this returns a list of tasks for the user based on the user ID. "
					},
					"response": []
				},
				{
					"name": "Get Task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"7"
							]
						},
						"description": "This returns a single task"
					},
					"response": []
				},
				{
					"name": "Add Task",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "author",
									"value": "Raymond Bayly",
									"description": "Author of the task",
									"type": "text"
								},
								{
									"key": "authorid",
									"value": "3",
									"description": "The ID of the author",
									"type": "text"
								},
								{
									"key": "assignee",
									"value": "John smith",
									"description": "The person assigned to ",
									"type": "text"
								},
								{
									"key": "assigneeid",
									"value": "4",
									"description": "ID of teh assignee",
									"type": "text"
								},
								{
									"key": "title",
									"value": "This is the task fo the title",
									"description": "This is teh title",
									"type": "text"
								},
								{
									"key": "task",
									"value": "This is the details of the task, this is where the full information on the task will go",
									"description": "This is the task details",
									"type": "text"
								},
								{
									"key": "status",
									"value": "news",
									"description": "Status of the task",
									"type": "text"
								},
								{
									"key": "create",
									"value": "04/10/2020",
									"description": "Date created",
									"type": "text"
								},
								{
									"key": "complete",
									"value": "04/12/2020",
									"description": "Date to complete",
									"type": "text"
								},
								{
									"key": "token",
									"value": "eferfd34534d",
									"description": "Auth Token",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						},
						"description": "This adds a task to the system"
					},
					"response": []
				},
				{
					"name": "Update Tasks",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "2",
									"description": "ID of the task",
									"type": "text"
								},
								{
									"key": "author",
									"value": "Ray Bayly",
									"description": "name of the creator",
									"type": "text"
								},
								{
									"key": "authorid",
									"value": "2",
									"description": "ID of the creator",
									"type": "text"
								},
								{
									"key": "assignee",
									"value": "Bob Draper",
									"description": "Name of the task assigne",
									"type": "text"
								},
								{
									"key": "assigneeid",
									"value": "4",
									"description": "ID of the ID",
									"type": "text"
								},
								{
									"key": "title",
									"value": "This is the title of the task",
									"description": "This is the title",
									"type": "text"
								},
								{
									"key": "task",
									"value": "This is the body of the task",
									"description": "tasks body",
									"type": "text"
								},
								{
									"key": "status",
									"value": "new",
									"description": "Status of the task",
									"type": "text"
								},
								{
									"key": "create",
									"value": "01.01.2020",
									"description": "Date created",
									"type": "text"
								},
								{
									"key": "complete",
									"value": "03.01.2020",
									"description": "Completed",
									"type": "text"
								},
								{
									"key": "token",
									"value": "78676sds98d",
									"description": "Auth Token",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						},
						"description": "This is the call that updates the task"
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks/32",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"32"
							]
						},
						"description": "This deletes the task from the server"
					},
					"response": []
				},
				{
					"name": "Complete Task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tasks/complete/23",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"complete",
								"23"
							]
						},
						"description": "This is the complete task"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "LookUp",
			"item": [
				{
					"name": "timezones",
					"item": [
						{
							"name": "Timezones (List)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/lookup/timezones",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"lookup",
										"timezones"
									]
								},
								"description": "This is the list of timezones"
							},
							"response": []
						},
						{
							"name": "Timezone (Single)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/lookup/timezone/3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"lookup",
										"timezone",
										"3"
									]
								},
								"description": "Returns a single timezone based on the index"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Job Titles",
					"item": [
						{
							"name": "List Job Titles",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/lookup/jobtitles",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"lookup",
										"jobtitles"
									]
								},
								"description": "This lists the job titles "
							},
							"response": []
						},
						{
							"name": "Get Job Title",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/lookup/jobtitle/3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"lookup",
										"jobtitle",
										"3"
									]
								},
								"description": "Gets single job title. "
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Default (Description)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/lookup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lookup"
							]
						},
						"description": "This is the default for the lookup, it just tells you its a look up . "
					},
					"response": []
				}
			],
			"description": "This is the lookup for lists of items needed for the application for either a list or a query lookup type ahead. ",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Welcome",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				},
				"description": "This is the welcome call for the Beowulf Node Server"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}